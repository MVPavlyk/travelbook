generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int       @id @default(autoincrement())
  firstName String    @map("first_name")
  lastName  String    @map("last_name")
  email     String    @unique
  avatarUrl String    @map("avatar_url")
  comments  Comment[]
  posts     Post[]
  password  String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Post {
  id              Int        @id @default(autoincrement())
  title           String
  country         String
  duration        String
  impression      Float
  approximateCost Int        @map("approximate_cost")
  description     String
  comments        Comment[]
  images          Image[]
  userId          Int
  author          User       @relation(fields: [userId], references: [id])
  createdAt       DateTime   @default(now())
  updatedAt       DateTime   @updatedAt
}

model Comment {
  id        Int      @id @default(autoincrement())
  text      String
  userId    Int
  postId    Int
  user      User     @relation(fields: [userId], references: [id])
  post      Post     @relation(fields: [postId], references: [id], onDelete: Cascade)
  images    Image[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Image {
  id        Int      @id @default(autoincrement())
  url       String
  postId    Int?
  commentId Int?
  post      Post?    @relation(fields: [postId], references: [id], onDelete: Cascade)
  comment   Comment? @relation(fields: [commentId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

