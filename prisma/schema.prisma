// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int    @id @default(autoincrement())
  firstName String    @map("first_name")
  lastName  String    @map("last_name")
  email     String    @unique
  avatarUrl String    @map("avatar_url")
  comments  Comment[]
  posts     Post[]
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Post {
  id              Int     @id @default(autoincrement())
  title           String
  country         String
  duration        String
  impression      Float
  approximateCost Int        @map("approximate_cost")
  description     String
  comments        Comment[]
  images          Image[]
  mapPoints       MapPoint[]
  userId          Int
  author          User       @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Comment {
  id     Int @id @default(autoincrement())
  text   String
  user   User   @relation(fields: [userId], references: [id])
  userId Int
  post   Post   @relation(fields: [postId], references: [id])
  postId Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Image {
  id     Int @id @default(autoincrement())
  url    String
  post   Post   @relation(fields: [postId], references: [id])
  postId Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model MapPoint {
  id     Int @id @default(autoincrement())
  lat    String
  lng    String
  title  String
  post   Post   @relation(fields: [postId], references: [id])
  postId Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
